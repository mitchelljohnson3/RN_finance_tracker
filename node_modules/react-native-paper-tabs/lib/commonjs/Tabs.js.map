{"version":3,"sources":["Tabs.tsx"],"names":["cache","createCache","Tabs","onChangeIndex","children","persistKey","theme","dark","style","defaultIndex","mode","uppercase","iconPosition","showTextLabel","showLeadingSpace","disableSwipe","onInnerChangeIndex","React","useCallback","newIndex","Platform","OS","set","getDefaultIndex","get","c","k","i","key"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAIA;;;;;;;;AAEA;AACA,MAAMA,KAAK,GAAGC,WAAW,EAAzB;;AAEA,SAASC,IAAT,CAAc;AACZC,EAAAA,aADY;AAEZC,EAAAA,QAFY;AAGZC,EAAAA,UAHY;AAIZC,EAAAA,KAJY;AAKZC,EAAAA,IALY;AAMZC,EAAAA,KANY;AAOZC,EAAAA,YAPY;AAQZC,EAAAA,IAAI,GAAG,OARK;AASZC,EAAAA,SAAS,GAAG,IATA;AAUZC,EAAAA,YAAY,GAAG,SAVH;AAWZC,EAAAA,aAAa,GAAG,IAXJ;AAYZC,EAAAA,gBAAgB,GAAG,IAZP;AAaZC,EAAAA,YAAY,GAAG;AAbH,CAAd,EA4BG;AACD,QAAMC,kBAAkB,GAAGC,KAAK,CAACC,WAAN,CACxBC,QAAD,IAAc;AACZ,QAAId,UAAU,IAAIe,sBAASC,EAAT,KAAgB,KAAlC,EAAyC;AACvCrB,MAAAA,KAAK,CAACsB,GAAN,CAAUjB,UAAV,EAAsBc,QAAtB;AACD;;AACDhB,IAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAGgB,QAAH,CAAb;AACD,GANwB,EAOzB,CAACd,UAAD,EAAaF,aAAb,CAPyB,CAA3B;AAUA,sBACE,oBAAC,eAAD;AACE,IAAA,KAAK,EAAEK,KADT;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,KAAK,EAAED,KAHT;AAIE,IAAA,YAAY,EAAEiB,eAAe,CAACd,YAAD,EAAeJ,UAAf,CAJ/B;AAKE,IAAA,aAAa,EAAEW,kBALjB;AAME,IAAA,SAAS,EAAEL,SANb;AAOE,IAAA,YAAY,EAAEC,YAPhB;AAQE,IAAA,aAAa,EAAEC,aARjB;AASE,IAAA,gBAAgB,EAAEC,gBATpB;AAUE,IAAA,IAAI,EAAEJ,IAVR;AAWE,IAAA,YAAY,EAAEK;AAXhB,KAaGX,QAbH,CADF;AAiBD;;AAED,SAASmB,eAAT,CACEd,YADF,EAEEJ,UAFF,EAGE;AACA,MAAIA,UAAJ,EAAgB;AACd,WAAOL,KAAK,CAACwB,GAAN,CAAUnB,UAAV,KAAyBI,YAAzB,IAAyC,CAAhD;AACD;;AACD,SAAOA,YAAY,IAAI,CAAvB;AACD,C,CACD;;;AACA,SAASR,WAAT,GAAuB;AACrB,MAAIwB,CAA0B,GAAG,EAAjC;;AACA,QAAMH,GAAG,GAAG,CAACI,CAAD,EAAYC,CAAZ,KAA0B;AACpCF,IAAAA,CAAC,CAACC,CAAD,CAAD,GAAOC,CAAP;AACD,GAFD;;AAGA,QAAMH,GAAG,GAAII,GAAD,IAAiBH,CAAC,CAACG,GAAD,CAA9B;;AACA,SAAO;AACLN,IAAAA,GADK;AAELE,IAAAA;AAFK,GAAP;AAID;;eAEc,iCAAUtB,IAAV,C","sourcesContent":["import * as React from 'react';\nimport type { ViewStyle } from 'react-native';\nimport { withTheme } from 'react-native-paper';\nimport Swiper from './Swiper';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\n\nimport type { IconPosition, Mode } from './utils';\nimport { Platform } from 'react-native';\n\n// used to persist position on web\nconst cache = createCache();\n\nfunction Tabs({\n  onChangeIndex,\n  children,\n  persistKey,\n  theme,\n  dark,\n  style,\n  defaultIndex,\n  mode = 'fixed',\n  uppercase = true,\n  iconPosition = 'leading',\n  showTextLabel = true,\n  showLeadingSpace = true,\n  disableSwipe = false,\n}: {\n  children: any;\n  persistKey?: string;\n  theme: Theme;\n  dark?: boolean;\n  style?: ViewStyle;\n  defaultIndex?: number;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  showLeadingSpace?: boolean;\n  uppercase?: boolean;\n  mode?: Mode;\n  onChangeIndex?: (index: number) => void;\n  disableSwipe?: boolean;\n}) {\n  const onInnerChangeIndex = React.useCallback(\n    (newIndex) => {\n      if (persistKey && Platform.OS === 'web') {\n        cache.set(persistKey, newIndex);\n      }\n      onChangeIndex?.(newIndex);\n    },\n    [persistKey, onChangeIndex]\n  );\n\n  return (\n    <Swiper\n      style={style}\n      dark={dark}\n      theme={theme}\n      defaultIndex={getDefaultIndex(defaultIndex, persistKey)}\n      onChangeIndex={onInnerChangeIndex}\n      uppercase={uppercase}\n      iconPosition={iconPosition}\n      showTextLabel={showTextLabel}\n      showLeadingSpace={showLeadingSpace}\n      mode={mode}\n      disableSwipe={disableSwipe}\n    >\n      {children}\n    </Swiper>\n  );\n}\n\nfunction getDefaultIndex(\n  defaultIndex: number | undefined,\n  persistKey: string | undefined\n) {\n  if (persistKey) {\n    return cache.get(persistKey) || defaultIndex || 0;\n  }\n  return defaultIndex || 0;\n}\n// used to persist position on web\nfunction createCache() {\n  let c: { [k: string]: number } = {};\n  const set = (k: string, i: number) => {\n    c[k] = i;\n  };\n  const get = (key: string) => c[key];\n  return {\n    set,\n    get,\n  };\n}\n\nexport default withTheme(Tabs);\n"]}
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNativePaper = require("react-native-paper");

var _Swiper = _interopRequireDefault(require("./Swiper"));

var _reactNative = require("react-native");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// used to persist position on web
const cache = createCache();

function Tabs({
  onChangeIndex,
  children,
  persistKey,
  theme,
  dark,
  style,
  defaultIndex,
  mode = 'fixed',
  uppercase = true,
  iconPosition = 'leading',
  showTextLabel = true,
  showLeadingSpace = true,
  disableSwipe = false
}) {
  const onInnerChangeIndex = React.useCallback(newIndex => {
    if (persistKey && _reactNative.Platform.OS === 'web') {
      cache.set(persistKey, newIndex);
    }

    onChangeIndex === null || onChangeIndex === void 0 ? void 0 : onChangeIndex(newIndex);
  }, [persistKey, onChangeIndex]);
  return /*#__PURE__*/React.createElement(_Swiper.default, {
    style: style,
    dark: dark,
    theme: theme,
    defaultIndex: getDefaultIndex(defaultIndex, persistKey),
    onChangeIndex: onInnerChangeIndex,
    uppercase: uppercase,
    iconPosition: iconPosition,
    showTextLabel: showTextLabel,
    showLeadingSpace: showLeadingSpace,
    mode: mode,
    disableSwipe: disableSwipe
  }, children);
}

function getDefaultIndex(defaultIndex, persistKey) {
  if (persistKey) {
    return cache.get(persistKey) || defaultIndex || 0;
  }

  return defaultIndex || 0;
} // used to persist position on web


function createCache() {
  let c = {};

  const set = (k, i) => {
    c[k] = i;
  };

  const get = key => c[key];

  return {
    set,
    get
  };
}

var _default = (0, _reactNativePaper.withTheme)(Tabs);

exports.default = _default;
//# sourceMappingURL=Tabs.js.map
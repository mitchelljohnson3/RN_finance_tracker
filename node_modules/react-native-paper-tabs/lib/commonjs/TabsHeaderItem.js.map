{"version":3,"sources":["TabsHeaderItem.tsx"],"names":["AnimatedText","Animated","createAnimatedComponent","Text","TabsHeaderItem","tab","tabIndex","active","goTo","onTabLayout","activeColor","textColor","theme","position","offset","childrenCount","uppercase","mode","iconPosition","showTextLabel","rippleColor","React","useMemo","alpha","rgb","string","color","opacity","props","label","styles","tabRoot","tabRootFixed","e","disabled","onPress","onPressIn","touchableRipple","touchableRippleTop","touchableRippleDisabled","selected","touchableRippleInner","touchableRippleInnerTop","icon","iconContainer","marginRight","text","textTop","fonts","medium","toUpperCase","StyleSheet","create","flex","height","justifyContent","alignItems","flexDirection","paddingRight","paddingLeft","minWidth","maxWidth","width","textAlign","letterSpacing","Platform","select","web","transitionDuration","transitionProperty","default","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  LayoutChangeEvent,\n  Animated,\n  StyleSheet,\n  View,\n  Platform,\n  TextProps,\n} from 'react-native';\nimport { Text, TouchableRipple } from 'react-native-paper';\nimport type { ReactElement } from 'react';\nimport type { TabScreenProps } from './TabScreen';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\nimport Color from 'color';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport { useAnimatedText } from './internal';\nimport type { IconPosition, Mode } from './utils';\nconst AnimatedText = Animated.createAnimatedComponent<\n  React.ComponentType<TextProps>\n>(Text as any);\n\nexport default function TabsHeaderItem({\n  tab,\n  tabIndex,\n  active,\n  goTo,\n  onTabLayout,\n  activeColor,\n  textColor,\n  theme,\n  position,\n  offset,\n  childrenCount,\n  uppercase,\n  mode,\n  iconPosition,\n  showTextLabel,\n}: {\n  tab: ReactElement<TabScreenProps>;\n  tabIndex: number;\n  active: boolean;\n  goTo: (index: number) => void;\n  onTabLayout: (index: number, e: LayoutChangeEvent) => void;\n  activeColor: string;\n  textColor: string;\n  theme: Theme;\n  position: Animated.Value | undefined;\n  offset: Animated.Value | undefined;\n  childrenCount: number;\n  uppercase?: boolean;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  mode: Mode;\n}) {\n  const rippleColor = React.useMemo(\n    () =>\n      Color(activeColor as any)\n        .alpha(0.32)\n        .rgb()\n        .string(),\n    [activeColor]\n  );\n\n  const { color, opacity } = useAnimatedText({\n    active,\n    position,\n    offset,\n    activeColor,\n    textColor,\n    tabIndex,\n    childrenCount,\n  });\n\n  return (\n    <View\n      key={tab.props.label}\n      style={[styles.tabRoot, mode === 'fixed' && styles.tabRootFixed]}\n      onLayout={(e) => onTabLayout(tabIndex, e)}\n    >\n      <TouchableRipple\n        disabled={tab.props.disabled}\n        onPress={(e) => {\n          goTo(tabIndex);\n          tab.props.onPress?.(e);\n        }}\n        onPressIn={tab.props.onPressIn}\n        style={[\n          styles.touchableRipple,\n          iconPosition === 'top' && styles.touchableRippleTop,\n          tab.props.disabled && styles.touchableRippleDisabled,\n        ]}\n        rippleColor={rippleColor}\n        // @ts-ignore\n        accessibilityTraits={'button'}\n        accessibilityRole=\"button\"\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={tab.props.label}\n        accessibilityState={{ selected: active }}\n        testID={`tab_${tabIndex}`}\n      >\n        <View\n          style={[\n            styles.touchableRippleInner,\n            iconPosition === 'top' && styles.touchableRippleInnerTop,\n          ]}\n        >\n          {tab.props.icon ? (\n            <View\n              style={[\n                styles.iconContainer,\n                iconPosition !== 'top' && styles.marginRight,\n              ]}\n            >\n              <MaterialCommunityIcon\n                selectable={false}\n                accessibilityElementsHidden={true}\n                importantForAccessibility=\"no\"\n                name={tab.props.icon || ''}\n                style={{ color: color, opacity }}\n                size={24}\n              />\n            </View>\n          ) : null}\n          {showTextLabel ? (\n            <AnimatedText\n              selectable={false}\n              style={[\n                styles.text,\n                iconPosition === 'top' && styles.textTop,\n                { ...theme.fonts.medium, color, opacity },\n              ]}\n            >\n              {uppercase ? tab.props.label.toUpperCase() : tab.props.label}\n            </AnimatedText>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabRoot: { position: 'relative' },\n  tabRootFixed: { flex: 1 },\n  touchableRipple: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  touchableRippleTop: {\n    height: 72,\n  },\n  touchableRippleInner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingRight: 16,\n    paddingLeft: 16,\n    minWidth: 90,\n    maxWidth: 360,\n  },\n  touchableRippleInnerTop: {\n    flexDirection: 'column',\n  },\n  touchableRippleDisabled: {\n    opacity: 0.4,\n  },\n  iconContainer: {\n    width: 24,\n    height: 24,\n  },\n  text: {\n    textAlign: 'center',\n    letterSpacing: 1,\n    ...Platform.select({\n      web: {\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n      },\n      default: {},\n    }),\n  },\n  textTop: { marginTop: 6 },\n  marginRight: { marginRight: 8 },\n});\n"]}
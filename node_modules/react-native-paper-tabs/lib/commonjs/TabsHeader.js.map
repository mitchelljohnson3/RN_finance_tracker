{"version":3,"sources":["TabsHeader.tsx"],"names":["TabsHeader","index","goTo","children","position","offset","theme","dark","style","iconPosition","showTextLabel","showLeadingSpace","uppercase","mode","colors","isDarkTheme","themeMode","backgroundColor","customBackground","elevation","restStyle","StyleSheet","flatten","isDark","surface","primary","hasPrimaryBackground","isLight","textColor","activeColor","innerScrollSize","React","useRef","scrollX","scrollRef","layouts","tabsLayout","setTabsLayout","useState","indicatorRef","onUpdateTabLayout","indicatorStyle","childrenCount","length","onTabsLayout","useCallback","e","nativeEvent","layout","onTabLayout","tabIndex","event","current","updateScroll","scrollType","cl","tabsWidth","width","scrolledX","next","prev","relativeX","x","overflowLeft","overflowRight","scrollTo","y","animated","useEffect","styles","relative","tabs","tabsTopIcon","fixedContentContainerStyle","undefined","contentOffset","scrollablePadding","Children","map","tab","indicator","removeTopShadow","height","top","create","left","right","zIndex","flex","bottom","Platform","select","web","transitionDuration","transitionProperty","transformOrigin","willChange","default"],"mappings":"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","sourcesContent":["import type { SwiperRenderProps } from './utils';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\nimport { overlay, Surface } from 'react-native-paper';\nimport color from 'color';\nimport * as React from 'react';\nimport { useIndicator, useOffsetScroller } from './internal';\nimport TabsHeaderItem from './TabsHeaderItem';\n\nexport default function TabsHeader({\n  index,\n  goTo,\n  children,\n  position,\n  offset,\n  theme,\n  dark,\n  style,\n  iconPosition,\n  showTextLabel,\n  showLeadingSpace,\n  uppercase,\n  mode,\n}: SwiperRenderProps) {\n  const { colors, dark: isDarkTheme, mode: themeMode } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && themeMode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n\n  let hasPrimaryBackground = colors.primary === backgroundColor;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : // @ts-ignore\n          !color(backgroundColor).isLight();\n  }\n  const textColor = isDark ? '#fff' : '#000';\n  const activeColor = hasPrimaryBackground ? textColor : theme.colors.primary;\n\n  const innerScrollSize = React.useRef<number | null>(null);\n  const scrollX = React.useRef<number>(0);\n  const scrollRef = React.useRef<ScrollView>(null);\n  const layouts = React.useRef<Record<string, LayoutRectangle> | null>(null);\n  const [tabsLayout, setTabsLayout] = React.useState<LayoutRectangle | null>(\n    null\n  );\n  const [indicatorRef, onUpdateTabLayout, indicatorStyle] = useIndicator({\n    tabsLayout,\n    layouts,\n    index,\n    offset,\n    position,\n    childrenCount: children.length,\n  });\n\n  const onTabsLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      setTabsLayout(e.nativeEvent.layout);\n    },\n    [setTabsLayout]\n  );\n\n  const onTabLayout = React.useCallback(\n    (tabIndex: number, event: LayoutChangeEvent) => {\n      layouts.current = {\n        ...layouts.current,\n        [tabIndex]: event.nativeEvent.layout,\n      };\n      onUpdateTabLayout();\n    },\n    [layouts, onUpdateTabLayout]\n  );\n\n  const updateScroll = React.useCallback(\n    (scrollType?: 'next' | 'prev') => {\n      if (!layouts.current || mode !== 'scrollable') {\n        return;\n      }\n      let cl = layouts.current[index];\n\n      if (!cl || !scrollRef.current || !tabsLayout) {\n        return;\n      }\n\n      const tabsWidth = tabsLayout.width;\n      let scrolledX = scrollX.current;\n      // console.log({ scrolledX, scrollType });\n      if (scrollType === 'next') {\n        const next = layouts.current?.[index + 1];\n        if (next) {\n          cl = next;\n        }\n      } else if (scrollType === 'prev') {\n        const prev = layouts.current?.[index - 1];\n        if (prev) {\n          cl = prev;\n        }\n      }\n      const relativeX = cl.x - scrolledX;\n      const overflowLeft = relativeX;\n      const overflowRight = -tabsWidth + relativeX + cl.width;\n\n      if (overflowRight > -50) {\n        scrollRef.current.scrollTo({\n          x: scrolledX + overflowRight + 50,\n          y: 0,\n          animated: true,\n        });\n      } else if (overflowLeft < 50) {\n        scrollRef.current.scrollTo({\n          x: scrolledX + overflowLeft - 50,\n          y: 0,\n          animated: true,\n        });\n      }\n    },\n    [mode, layouts, index, scrollRef, scrollX, tabsLayout]\n  );\n\n  // subscribes to offset on native devices to scroll tab bar faster when scrolling (iOS only since Android bugs)\n  useOffsetScroller({ updateScroll, index, offset, mode });\n\n  // updates scroll when index changes (updateScroll function changes to new reference when index changes)\n  React.useEffect(() => {\n    updateScroll();\n  }, [updateScroll]);\n\n  return (\n    <View style={styles.relative}>\n      <Surface\n        style={[\n          { backgroundColor, elevation },\n          restStyle,\n          styles.tabs,\n          iconPosition === 'top' && styles.tabsTopIcon,\n        ]}\n        onLayout={onTabsLayout}\n      >\n        <ScrollView\n          ref={scrollRef}\n          contentContainerStyle={\n            mode === 'fixed' ? styles.fixedContentContainerStyle : undefined\n          }\n          onContentSizeChange={(e) => {\n            innerScrollSize.current = e;\n          }}\n          onScroll={(e) => {\n            scrollX.current = e.nativeEvent.contentOffset.x;\n          }}\n          scrollEventThrottle={25}\n          horizontal={true}\n          showsHorizontalScrollIndicator={false}\n          alwaysBounceHorizontal={mode === 'scrollable'}\n          scrollEnabled={mode === 'scrollable'}\n        >\n          {mode === 'scrollable' && showLeadingSpace ? (\n            <View style={styles.scrollablePadding} />\n          ) : null}\n\n          {React.Children.map(children, (tab, tabIndex) => (\n            <TabsHeaderItem\n              theme={theme}\n              tabIndex={tabIndex}\n              tab={tab}\n              active={index === tabIndex}\n              onTabLayout={onTabLayout}\n              goTo={goTo}\n              activeColor={activeColor}\n              textColor={textColor}\n              position={position}\n              offset={offset}\n              childrenCount={children.length}\n              uppercase={uppercase}\n              iconPosition={iconPosition}\n              showTextLabel={showTextLabel}\n              mode={mode}\n            />\n          ))}\n          <Animated.View\n            ref={indicatorRef}\n            pointerEvents=\"none\"\n            style={[\n              styles.indicator,\n              {\n                backgroundColor: activeColor,\n              },\n              indicatorStyle,\n            ]}\n          />\n        </ScrollView>\n        <Animated.View\n          style={[\n            styles.removeTopShadow,\n            {\n              height: elevation,\n              backgroundColor,\n              top: -elevation,\n            },\n          ]}\n        />\n      </Surface>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  relative: { position: 'relative' },\n  removeTopShadow: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    zIndex: 2,\n  },\n  scrollablePadding: {\n    width: 52,\n  },\n  tabs: {\n    height: 48,\n  },\n  tabsTopIcon: {\n    height: 72,\n  },\n  fixedContentContainerStyle: {\n    flex: 1,\n  },\n  indicator: {\n    position: 'absolute',\n    height: 2,\n    width: 1,\n    left: 0,\n    bottom: 0,\n    ...Platform.select({\n      web: {\n        backgroundColor: 'transparent',\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n        transformOrigin: 'left',\n        willChange: 'transform',\n      },\n      default: {},\n    }),\n  },\n});\n"]}
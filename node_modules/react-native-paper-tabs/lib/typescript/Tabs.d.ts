import * as React from 'react';
import type { ViewStyle } from 'react-native';
import type { Theme } from 'react-native-paper/lib/typescript/types';
import type { IconPosition, Mode } from './utils';
declare function Tabs({ onChangeIndex, children, persistKey, theme, dark, style, defaultIndex, mode, uppercase, iconPosition, showTextLabel, showLeadingSpace, disableSwipe, }: {
    children: any;
    persistKey?: string;
    theme: Theme;
    dark?: boolean;
    style?: ViewStyle;
    defaultIndex?: number;
    iconPosition?: IconPosition;
    showTextLabel?: boolean;
    showLeadingSpace?: boolean;
    uppercase?: boolean;
    mode?: Mode;
    onChangeIndex?: (index: number) => void;
    disableSwipe?: boolean;
}): JSX.Element;
declare const _default: (React.ComponentClass<Pick<{
    children: any;
    persistKey?: string | undefined;
    theme: Theme;
    dark?: boolean | undefined;
    style?: ViewStyle | undefined;
    defaultIndex?: number | undefined;
    iconPosition?: IconPosition | undefined;
    showTextLabel?: boolean | undefined;
    showLeadingSpace?: boolean | undefined;
    uppercase?: boolean | undefined;
    mode?: Mode | undefined;
    onChangeIndex?: ((index: number) => void) | undefined;
    disableSwipe?: boolean | undefined;
}, "style" | "children" | "uppercase" | "mode" | "iconPosition" | "showTextLabel" | "dark" | "showLeadingSpace" | "defaultIndex" | "onChangeIndex" | "disableSwipe" | "persistKey"> & {
    theme?: import("@callstack/react-theme-provider").$DeepPartial<ReactNativePaper.Theme> | undefined;
}, any> & import("@callstack/react-theme-provider/typings/hoist-non-react-statics").NonReactStatics<(React.ComponentClass<{
    children: any;
    persistKey?: string | undefined;
    theme: Theme;
    dark?: boolean | undefined;
    style?: ViewStyle | undefined;
    defaultIndex?: number | undefined;
    iconPosition?: IconPosition | undefined;
    showTextLabel?: boolean | undefined;
    showLeadingSpace?: boolean | undefined;
    uppercase?: boolean | undefined;
    mode?: Mode | undefined;
    onChangeIndex?: ((index: number) => void) | undefined;
    disableSwipe?: boolean | undefined;
}, any> & typeof Tabs) | (React.FunctionComponent<{
    children: any;
    persistKey?: string | undefined;
    theme: Theme;
    dark?: boolean | undefined;
    style?: ViewStyle | undefined;
    defaultIndex?: number | undefined;
    iconPosition?: IconPosition | undefined;
    showTextLabel?: boolean | undefined;
    showLeadingSpace?: boolean | undefined;
    uppercase?: boolean | undefined;
    mode?: Mode | undefined;
    onChangeIndex?: ((index: number) => void) | undefined;
    disableSwipe?: boolean | undefined;
}> & typeof Tabs), {}>) | (React.FunctionComponent<Pick<{
    children: any;
    persistKey?: string | undefined;
    theme: Theme;
    dark?: boolean | undefined;
    style?: ViewStyle | undefined;
    defaultIndex?: number | undefined;
    iconPosition?: IconPosition | undefined;
    showTextLabel?: boolean | undefined;
    showLeadingSpace?: boolean | undefined;
    uppercase?: boolean | undefined;
    mode?: Mode | undefined;
    onChangeIndex?: ((index: number) => void) | undefined;
    disableSwipe?: boolean | undefined;
}, "style" | "children" | "uppercase" | "mode" | "iconPosition" | "showTextLabel" | "dark" | "showLeadingSpace" | "defaultIndex" | "onChangeIndex" | "disableSwipe" | "persistKey"> & {
    theme?: import("@callstack/react-theme-provider").$DeepPartial<ReactNativePaper.Theme> | undefined;
}> & import("@callstack/react-theme-provider/typings/hoist-non-react-statics").NonReactStatics<(React.ComponentClass<{
    children: any;
    persistKey?: string | undefined;
    theme: Theme;
    dark?: boolean | undefined;
    style?: ViewStyle | undefined;
    defaultIndex?: number | undefined;
    iconPosition?: IconPosition | undefined;
    showTextLabel?: boolean | undefined;
    showLeadingSpace?: boolean | undefined;
    uppercase?: boolean | undefined;
    mode?: Mode | undefined;
    onChangeIndex?: ((index: number) => void) | undefined;
    disableSwipe?: boolean | undefined;
}, any> & typeof Tabs) | (React.FunctionComponent<{
    children: any;
    persistKey?: string | undefined;
    theme: Theme;
    dark?: boolean | undefined;
    style?: ViewStyle | undefined;
    defaultIndex?: number | undefined;
    iconPosition?: IconPosition | undefined;
    showTextLabel?: boolean | undefined;
    showLeadingSpace?: boolean | undefined;
    uppercase?: boolean | undefined;
    mode?: Mode | undefined;
    onChangeIndex?: ((index: number) => void) | undefined;
    disableSwipe?: boolean | undefined;
}> & typeof Tabs), {}>);
export default _default;

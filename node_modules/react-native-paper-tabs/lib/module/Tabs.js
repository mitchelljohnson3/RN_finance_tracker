import * as React from 'react';
import { withTheme } from 'react-native-paper';
import Swiper from './Swiper';
import { Platform } from 'react-native'; // used to persist position on web

const cache = createCache();

function Tabs({
  onChangeIndex,
  children,
  persistKey,
  theme,
  dark,
  style,
  defaultIndex,
  mode = 'fixed',
  uppercase = true,
  iconPosition = 'leading',
  showTextLabel = true,
  showLeadingSpace = true,
  disableSwipe = false
}) {
  const onInnerChangeIndex = React.useCallback(newIndex => {
    if (persistKey && Platform.OS === 'web') {
      cache.set(persistKey, newIndex);
    }

    onChangeIndex === null || onChangeIndex === void 0 ? void 0 : onChangeIndex(newIndex);
  }, [persistKey, onChangeIndex]);
  return /*#__PURE__*/React.createElement(Swiper, {
    style: style,
    dark: dark,
    theme: theme,
    defaultIndex: getDefaultIndex(defaultIndex, persistKey),
    onChangeIndex: onInnerChangeIndex,
    uppercase: uppercase,
    iconPosition: iconPosition,
    showTextLabel: showTextLabel,
    showLeadingSpace: showLeadingSpace,
    mode: mode,
    disableSwipe: disableSwipe
  }, children);
}

function getDefaultIndex(defaultIndex, persistKey) {
  if (persistKey) {
    return cache.get(persistKey) || defaultIndex || 0;
  }

  return defaultIndex || 0;
} // used to persist position on web


function createCache() {
  let c = {};

  const set = (k, i) => {
    c[k] = i;
  };

  const get = key => c[key];

  return {
    set,
    get
  };
}

export default withTheme(Tabs);
//# sourceMappingURL=Tabs.js.map